// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: comunicacion.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Mensajes para la funcionalidad de cola de jugadores
type PlayerInfoRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	PlayerId           int32                  `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`                                // ID del jugador que solicita unirse a la cola
	GameModePreference string                 `protobuf:"bytes,2,opt,name=game_mode_preference,json=gameModePreference,proto3" json:"game_mode_preference,omitempty"` // Preferencia de modo de juego del jugador
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *PlayerInfoRequest) Reset() {
	*x = PlayerInfoRequest{}
	mi := &file_comunicacion_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerInfoRequest) ProtoMessage() {}

func (x *PlayerInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_comunicacion_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerInfoRequest.ProtoReflect.Descriptor instead.
func (*PlayerInfoRequest) Descriptor() ([]byte, []int) {
	return file_comunicacion_proto_rawDescGZIP(), []int{0}
}

func (x *PlayerInfoRequest) GetPlayerId() int32 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *PlayerInfoRequest) GetGameModePreference() string {
	if x != nil {
		return x.GameModePreference
	}
	return ""
}

type QueuePlayerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"` // Mensaje adicional, por ejemplo, si el jugador ya est치 en la cola
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueuePlayerResponse) Reset() {
	*x = QueuePlayerResponse{}
	mi := &file_comunicacion_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueuePlayerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueuePlayerResponse) ProtoMessage() {}

func (x *QueuePlayerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_comunicacion_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueuePlayerResponse.ProtoReflect.Descriptor instead.
func (*QueuePlayerResponse) Descriptor() ([]byte, []int) {
	return file_comunicacion_proto_rawDescGZIP(), []int{1}
}

func (x *QueuePlayerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Mensajes para la funcionalidad de consulta del estado del jugador
type PlayerStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      int32                  `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"` // ID del jugador para consultar su estado
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlayerStatusRequest) Reset() {
	*x = PlayerStatusRequest{}
	mi := &file_comunicacion_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerStatusRequest) ProtoMessage() {}

func (x *PlayerStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_comunicacion_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerStatusRequest.ProtoReflect.Descriptor instead.
func (*PlayerStatusRequest) Descriptor() ([]byte, []int) {
	return file_comunicacion_proto_rawDescGZIP(), []int{2}
}

func (x *PlayerStatusRequest) GetPlayerId() int32 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

type PlayerStatusResponse struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Status             string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`                                                     // Estado del jugador, por ejemplo, "IDLE", "IN QUEUE", "IN MATCH"
	MatchId            int32                  `protobuf:"varint,4,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty"`                                   // ID de la partida, si est치 en una
	MatchServerAddress string                 `protobuf:"bytes,5,opt,name=match_server_address,json=matchServerAddress,proto3" json:"match_server_address,omitempty"` // Direcci칩n del servidor de la partida, si est치 en una
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *PlayerStatusResponse) Reset() {
	*x = PlayerStatusResponse{}
	mi := &file_comunicacion_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerStatusResponse) ProtoMessage() {}

func (x *PlayerStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_comunicacion_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerStatusResponse.ProtoReflect.Descriptor instead.
func (*PlayerStatusResponse) Descriptor() ([]byte, []int) {
	return file_comunicacion_proto_rawDescGZIP(), []int{3}
}

func (x *PlayerStatusResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PlayerStatusResponse) GetMatchId() int32 {
	if x != nil {
		return x.MatchId
	}
	return 0
}

func (x *PlayerStatusResponse) GetMatchServerAddress() string {
	if x != nil {
		return x.MatchServerAddress
	}
	return ""
}

// jugador
type Jugador struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Id                 int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                            // ID del jugador
	Name               string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                                         // Nombre del jugador
	GameModePreference string                 `protobuf:"bytes,3,opt,name=game_mode_preference,json=gameModePreference,proto3" json:"game_mode_preference,omitempty"` // Preferencia de modo de juego del jugador
	Status             string                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`                                                     // Estado del jugador, por ejemplo, "IDLE", "IN QUEUE", "IN MATCH"
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *Jugador) Reset() {
	*x = Jugador{}
	mi := &file_comunicacion_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Jugador) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Jugador) ProtoMessage() {}

func (x *Jugador) ProtoReflect() protoreflect.Message {
	mi := &file_comunicacion_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Jugador.ProtoReflect.Descriptor instead.
func (*Jugador) Descriptor() ([]byte, []int) {
	return file_comunicacion_proto_rawDescGZIP(), []int{4}
}

func (x *Jugador) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Jugador) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Jugador) GetGameModePreference() string {
	if x != nil {
		return x.GameModePreference
	}
	return ""
}

func (x *Jugador) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

var File_comunicacion_proto protoreflect.FileDescriptor

const file_comunicacion_proto_rawDesc = "" +
	"\n" +
	"\x12comunicacion.proto\x12\fcomunicacion\"b\n" +
	"\x11PlayerInfoRequest\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\x05R\bplayerId\x120\n" +
	"\x14game_mode_preference\x18\x02 \x01(\tR\x12gameModePreference\"/\n" +
	"\x13QueuePlayerResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"2\n" +
	"\x13PlayerStatusRequest\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\x05R\bplayerId\"{\n" +
	"\x14PlayerStatusResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x19\n" +
	"\bmatch_id\x18\x04 \x01(\x05R\amatchId\x120\n" +
	"\x14match_server_address\x18\x05 \x01(\tR\x12matchServerAddress\"w\n" +
	"\aJugador\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x120\n" +
	"\x14game_mode_preference\x18\x03 \x01(\tR\x12gameModePreference\x12\x16\n" +
	"\x06status\x18\x04 \x01(\tR\x06status2\xc2\x01\n" +
	"\x13ComunicacionService\x12Q\n" +
	"\vQueuePlayer\x12\x1f.comunicacion.PlayerInfoRequest\x1a!.comunicacion.QueuePlayerResponse\x12X\n" +
	"\x0fGetPlayerStatus\x12!.comunicacion.PlayerStatusRequest\x1a\".comunicacion.PlayerStatusResponseB\x13Z\x11grpc-server/protob\x06proto3"

var (
	file_comunicacion_proto_rawDescOnce sync.Once
	file_comunicacion_proto_rawDescData []byte
)

func file_comunicacion_proto_rawDescGZIP() []byte {
	file_comunicacion_proto_rawDescOnce.Do(func() {
		file_comunicacion_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_comunicacion_proto_rawDesc), len(file_comunicacion_proto_rawDesc)))
	})
	return file_comunicacion_proto_rawDescData
}

var file_comunicacion_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_comunicacion_proto_goTypes = []any{
	(*PlayerInfoRequest)(nil),    // 0: comunicacion.PlayerInfoRequest
	(*QueuePlayerResponse)(nil),  // 1: comunicacion.QueuePlayerResponse
	(*PlayerStatusRequest)(nil),  // 2: comunicacion.PlayerStatusRequest
	(*PlayerStatusResponse)(nil), // 3: comunicacion.PlayerStatusResponse
	(*Jugador)(nil),              // 4: comunicacion.Jugador
}
var file_comunicacion_proto_depIdxs = []int32{
	0, // 0: comunicacion.ComunicacionService.QueuePlayer:input_type -> comunicacion.PlayerInfoRequest
	2, // 1: comunicacion.ComunicacionService.GetPlayerStatus:input_type -> comunicacion.PlayerStatusRequest
	1, // 2: comunicacion.ComunicacionService.QueuePlayer:output_type -> comunicacion.QueuePlayerResponse
	3, // 3: comunicacion.ComunicacionService.GetPlayerStatus:output_type -> comunicacion.PlayerStatusResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_comunicacion_proto_init() }
func file_comunicacion_proto_init() {
	if File_comunicacion_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_comunicacion_proto_rawDesc), len(file_comunicacion_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_comunicacion_proto_goTypes,
		DependencyIndexes: file_comunicacion_proto_depIdxs,
		MessageInfos:      file_comunicacion_proto_msgTypes,
	}.Build()
	File_comunicacion_proto = out.File
	file_comunicacion_proto_goTypes = nil
	file_comunicacion_proto_depIdxs = nil
}
